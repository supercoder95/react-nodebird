{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  id: 1,\n  nickname: '제로초',\n  Posts: [],\n  Followings: [],\n  Followers: []\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\n\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const loginAction = data => {\n  return dispatch => {\n    dispatch(loginRequsetAction());\n    axios.get('/api/login').then(() => {\n      dispatch(loginSuccessAction());\n    });\n  };\n};\nexport const signUpAction = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\nexport const signUpSuccess = {\n  type: 'SIGN_UP_SUCCESS'\n};\nexport const loginRequsetAction = data => {\n  return {\n    type: 'LOG_IN_REQUSET',\n    data\n  };\n};\nexport const loginSuccessAction = data => {\n  return {\n    type: 'LOG_IN_SUCCESS',\n    data\n  };\n};\nexport const loginFailureAction = data => {\n  return {\n    type: 'LOG_IN_FAILURE',\n    data\n  };\n};\nexport const logoutRequsetAction = data => {\n  return {\n    type: 'LOG_OUT_REQUSET',\n    data\n  };\n};\nexport const logoutSuccessAction = data => {\n  return {\n    type: 'LOG_OUT_SUCCESS',\n    data\n  };\n};\nexport const logoutFailureAction = data => {\n  return {\n    type: 'LOG_OUT_FAILURE',\n    data\n  };\n};\nexport const signUp = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true,\n          user: dummyUser,\n          loginData: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["D:/reactNative/react-nodebird/prepare/front/reducers/user.js"],"names":["dummyUser","id","nickname","Posts","Followings","Followers","initialState","isLoggedIn","user","signUpData","loginData","SIGN_UP","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT","loginAction","data","dispatch","loginRequsetAction","axios","get","then","loginSuccessAction","signUpAction","type","signUpSuccess","loginFailureAction","logoutRequsetAction","logoutSuccessAction","logoutFailureAction","signUp","state","action"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE,CADY;AAEhBC,EAAAA,QAAQ,EAAE,KAFM;AAGhBC,EAAAA,KAAK,EAAE,EAHS;AAIhBC,EAAAA,UAAU,EAAE,EAJI;AAKhBC,EAAAA,SAAS,EAAE;AALK,CAAlB;AAQA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,IAAI,EAAE,IAFoB;AAG1BC,EAAAA,UAAU,EAAE,EAHc;AAI1BC,EAAAA,SAAS,EAAE;AAJe,CAArB;AAOP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CAACC,GAAN,CAAU,YAAV,EACGC,IADH,CACQ,MAAM;AACVJ,MAAAA,QAAQ,CAACK,kBAAkB,EAAnB,CAAR;AACD,KAHH;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAMC,YAAY,GAAIP,IAAD,IAAU;AACpC,SAAO;AACLQ,IAAAA,IAAI,EAAEf,OADD;AAELO,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMS,aAAa,GAAG;AAC3BD,EAAAA,IAAI,EAAE;AADqB,CAAtB;AAIP,OAAO,MAAMN,kBAAkB,GAAIF,IAAD,IAAU;AAC1C,SAAO;AACLQ,IAAAA,IAAI,EAAE,gBADD;AAELR,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMM,kBAAkB,GAAIN,IAAD,IAAU;AAC1C,SAAO;AACLQ,IAAAA,IAAI,EAAE,gBADD;AAELR,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMU,kBAAkB,GAAIV,IAAD,IAAU;AAC1C,SAAO;AACLQ,IAAAA,IAAI,EAAE,gBADD;AAELR,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMW,mBAAmB,GAAIX,IAAD,IAAU;AAC3C,SAAO;AACLQ,IAAAA,IAAI,EAAE,iBADD;AAELR,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMY,mBAAmB,GAAIZ,IAAD,IAAU;AAC3C,SAAO;AACLQ,IAAAA,IAAI,EAAE,iBADD;AAELR,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMa,mBAAmB,GAAIb,IAAD,IAAU;AAC3C,SAAO;AACLQ,IAAAA,IAAI,EAAE,iBADD;AAELR,IAAAA;AAFK,GAAP;AAID,CALM;AAUP,OAAO,MAAMc,MAAM,GAAId,IAAD,IAAU;AAC9B,SAAO;AACLQ,IAAAA,IAAI,EAAEf,OADD;AAELO,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,gBAAe,CAACe,KAAK,GAAG3B,YAAT,EAAuB4B,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKb,MAAL;AAAa;AACX,+CACKoB,KADL;AAEE1B,UAAAA,UAAU,EAAE,IAFd;AAGEC,UAAAA,IAAI,EAAER,SAHR;AAIEU,UAAAA,SAAS,EAAEwB,MAAM,CAAChB;AAJpB;AAMD;;AACD,SAAKF,OAAL;AAAc;AACZ,+CACKiB,KADL;AAEE1B,UAAAA,UAAU,EAAE,KAFd;AAGEC,UAAAA,IAAI,EAAE;AAHR;AAKD;;AACD,SAAKG,OAAL;AAAc;AACZ,+CACKsB,KADL;AAEExB,UAAAA,UAAU,EAAEyB,MAAM,CAAChB;AAFrB;AAID;;AACD;AAAS;AACP,iCACKe,KADL;AAGD;AA1BH;AA4BD,CA7BD","sourcesContent":["const dummyUser = {\r\n  id: 1,\r\n  nickname: '제로초',\r\n  Posts: [],\r\n  Followings: [],\r\n  Followers: [],\r\n};\r\n\r\nexport const initialState = {\r\n  isLoggedIn: false,\r\n  user: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const loginAction = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequsetAction())\r\n    axios.get('/api/login')\r\n      .then(() => {\r\n        dispatch(loginSuccessAction());\r\n      })\r\n  }\r\n}\r\n\r\nexport const signUpAction = (data) => {\r\n  return {\r\n    type: SIGN_UP,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = {\r\n  type: 'SIGN_UP_SUCCESS',\r\n};\r\n\r\nexport const loginRequsetAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_REQUSET',\r\n    data,\r\n  }\r\n};\r\n\r\nexport const loginSuccessAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_SUCCESS',\r\n    data,\r\n  }\r\n};\r\n\r\nexport const loginFailureAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_FAILURE',\r\n    data,\r\n  }\r\n};\r\n\r\nexport const logoutRequsetAction = (data) => {\r\n  return {\r\n    type: 'LOG_OUT_REQUSET',\r\n    data,\r\n  }\r\n};\r\n\r\nexport const logoutSuccessAction = (data) => {\r\n  return {\r\n    type: 'LOG_OUT_SUCCESS',\r\n    data,\r\n  }\r\n};\r\n\r\nexport const logoutFailureAction = (data) => {\r\n  return {\r\n    type: 'LOG_OUT_FAILURE',\r\n    data,\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nexport const signUp = (data) => {\r\n  return {\r\n    type: SIGN_UP,\r\n    data,\r\n  }\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: dummyUser,\r\n        loginData: action.data,\r\n      };\r\n    }\r\n    case LOG_OUT: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    }\r\n    case SIGN_UP: {\r\n      return {\r\n        ...state,\r\n        signUpData: action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}