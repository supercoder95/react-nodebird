{"ast":null,"code":"import { all, fork, takeLatest, delay, put } from 'redux-saga/effects';\nimport axios from 'axios'; // LogIn\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000), // const result = yield call(logInAPI, action.data);\n    yield put({\n      type: 'LOG_IN_SUCCESS' // data: result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n} // LogOut\n\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    //   const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUSET', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUSET', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["D:/reactNative/react-nodebird/prepare/front/sagas/user.js"],"names":["all","fork","takeLatest","delay","put","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAG;AACD,UAAMP,KAAK,CAAC,IAAD,CAAX,EACA;AACA,UAAMC,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAE,gBADA,CAEN;;AAFM,KAAD,CAFT;AAMD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACV,UAAMR,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAE,gBADA;AAENJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFb,KAAD,CAAT;AAIH;AACF,C,CAED;;;AACA,SAASO,SAAT,GAAqB;AACjB,SAAOT,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACH;;AAED,UAAUO,MAAV,GAAmB;AACf,MAAG;AACH;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AAEE,UAAMC,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAE;AADA,KAAD,CAAT;AAGD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACV,UAAMR,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAE,iBADA;AAENJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFb,KAAD,CAAT;AAIH;AACF;;AAGH,UAAUS,UAAV,GAAuB;AACnB,QAAMd,UAAU,CAAC,gBAAD,EAAmBO,KAAnB,CAAhB;AACH;;AAED,UAAUQ,WAAV,GAAwB;AACpB,QAAMf,UAAU,CAAC,iBAAD,EAAoBa,MAApB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMlB,GAAG,CAAC,CACNC,IAAI,CAACe,UAAD,CADE,EAENf,IAAI,CAACgB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, takeLatest, delay, put } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\n// LogIn\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try{\r\n    yield delay(1000),\r\n    // const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n        type: 'LOG_IN_SUCCESS',\r\n        // data: result.data\r\n    });\r\n  } catch (err) {\r\n      yield put({\r\n          type: \"LOG_IN_FAILURE\",\r\n          data: err.response.data,\r\n      });\r\n  }\r\n}\r\n\r\n// LogOut\r\nfunction logOutAPI() {\r\n    return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try{\r\n    //   const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    \r\n      yield put({\r\n          type: 'LOG_OUT_SUCCESS',\r\n      });\r\n    } catch (err) {\r\n        yield put({\r\n            type: \"LOG_OUT_FAILURE\",\r\n            data: err.response.data,\r\n        });\r\n    }\r\n  }\r\n\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('LOG_IN_REQUSET', logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest('LOG_OUT_REQUSET', logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}