{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// const dummyUser = {\n//   id: 1,\n//   nickname: 'supercoder',\n//   Posts: [],\n//   Followings: [],\n//   Followers: [],\n// };\nexport var initialState = {\n  isLoggingIn: false,\n  // 로그인 시도중\n  isLoggedIn: false,\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var SIGN_UP = 'SIGN_UP';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var LOG_IN_REQUSET = 'LOG_IN_REQUSET'; // 액션의 이름\n\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport var LOG_OUT_REQUSET = 'LOG_OUT_REQUSET';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var loginRequsetAction = function loginRequsetAction(data) {\n  return {\n    type: 'LOG_IN_REQUSET',\n    data: data\n  };\n};\nexport var signUpAction = function signUpAction(data) {\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n};\nexport var signUpSuccess = {\n  type: 'SIGN_UP_SUCCESS'\n};\nexport var logoutRequsetAction = function logoutRequsetAction(data) {\n  return {\n    type: 'LOG_OUT_REQUSET',\n    data: data\n  };\n};\nexport var signUp = function signUp(data) {\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOG_IN_REQUSET':\n      {\n        console.log('reducer login');\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: true\n        });\n      }\n\n    case 'LOG_IN_SUCCES':\n      {\n        console.log('login success');\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          me: _objectSpread(_objectSpread({}, action.data), {}, {\n            nickname: 'supercoder'\n          })\n        });\n      }\n\n    case 'LOG_IN_FAILURE':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          isLoggedIn: false\n        });\n      }\n\n    case 'LOG_OUT_REQUSET':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: true,\n          isLoggedIn: false\n        });\n      }\n\n    case 'LOG_OUT_SUCCESS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: false,\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case 'LOG_OUT_FAILURE':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: false,\n          isLoggedIn: false\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/reactNative/react-nodebird/prepare/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","isLoggingOut","me","signUpData","loginData","SIGN_UP","SIGN_UP_SUCCESS","LOG_IN_REQUSET","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUSET","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loginRequsetAction","data","type","signUpAction","signUpSuccess","logoutRequsetAction","signUp","reducer","state","action","console","log","nickname"],"mappings":"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","sourcesContent":["// const dummyUser = {\r\n//   id: 1,\r\n//   nickname: 'supercoder',\r\n//   Posts: [],\r\n//   Followings: [],\r\n//   Followers: [],\r\n// };\r\n\r\nexport const initialState = {\r\n  isLoggingIn: false, // 로그인 시도중\r\n  isLoggedIn: false,\r\n  isLoggingOut: false, // 로그아웃 시도중\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\n\r\nexport const LOG_IN_REQUSET = 'LOG_IN_REQUSET'; // 액션의 이름\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\n\r\nexport const LOG_OUT_REQUSET = 'LOG_OUT_REQUSET';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const loginRequsetAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_REQUSET',\r\n    data,\r\n  }\r\n};\r\n\r\nexport const signUpAction = (data) => {\r\n  return {\r\n    type: SIGN_UP,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = {\r\n  type: 'SIGN_UP_SUCCESS',\r\n};\r\n\r\nexport const logoutRequsetAction = (data) => {\r\n  return {\r\n    type: 'LOG_OUT_REQUSET',\r\n    data,\r\n  }\r\n};\r\n\r\n\r\nexport const signUp = (data) => {\r\n  return {\r\n    type: SIGN_UP,\r\n    data,\r\n  }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN_REQUSET': {\r\n      console.log('reducer login')\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n      };\r\n    }\r\n    case 'LOG_IN_SUCCES': {\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoggedIn: true,\r\n        me: { ...action.data, nickname: 'supercoder' },\r\n      };\r\n    }\r\n    case 'LOG_IN_FAILURE': {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoggedIn: false,\r\n      };\r\n    }\r\n    case 'LOG_OUT_REQUSET': {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n        isLoggedIn: false,\r\n      };\r\n    }\r\n    case 'LOG_OUT_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isLoggedIn: false,\r\n        me: null,\r\n      };\r\n    }\r\n    case 'LOG_OUT_FAILURE': {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isLoggedIn: false,\r\n      };\r\n    }\r\n    case SIGN_UP: {\r\n      return {\r\n        ...state,\r\n        signUpData: action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}