{"ast":null,"code":"import { all, fork, take, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take('LOG_IN_REQUSET', logIn);\n}\n\nfunction* watchLogOut() {\n  yield take('LOG_OUT_REQUSET', logOut);\n}\n\nfunction* watchAddPost() {\n  yield take('ADD_POST_REQUSET', addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["D:/reactNative/react-nodebird/prepare/front/sagas/index.js"],"names":["all","fork","take","call","put","axios","logInAPI","data","post","logIn","action","result","type","err","response","logOutAPI","logOut","addPostAPI","addPost","watchLogin","watchLogOut","watchAddPost","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAG;AACD,UAAMC,MAAM,GAAG,MAAMR,IAAI,CAACG,QAAD,EAAWI,MAAM,CAACH,IAAlB,CAAzB;AACA,UAAMH,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,gBADA;AAENL,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACV,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,gBADA;AAENL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AACF;;AAED,SAASQ,SAAT,GAAqB;AACjB,SAAOV,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACH;;AAED,UAAUQ,MAAV,GAAmB;AACf,MAAG;AACD,UAAML,MAAM,GAAG,MAAMR,IAAI,CAACY,SAAD,CAAzB;AACA,UAAMX,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,iBADA;AAENL,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACV,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,iBADA;AAENL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AACF;;AAEH,SAASU,UAAT,CAAoBV,IAApB,EAA0B;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUW,OAAV,CAAkBR,MAAlB,EAA0B;AACtB,MAAG;AACD,UAAMC,MAAM,GAAG,MAAMR,IAAI,CAACc,UAAD,EAAaP,MAAM,CAACH,IAApB,CAAzB;AACA,UAAMH,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,kBADA;AAENL,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACV,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,kBADA;AAENL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AACF;;AAGH,UAAUY,UAAV,GAAuB;AACnB,QAAMjB,IAAI,CAAC,gBAAD,EAAmBO,KAAnB,CAAV;AACH;;AAED,UAAUW,WAAV,GAAwB;AACpB,QAAMlB,IAAI,CAAC,iBAAD,EAAoBc,MAApB,CAAV;AACH;;AAED,UAAUK,YAAV,GAAyB;AACrB,QAAMnB,IAAI,CAAC,kBAAD,EAAqBgB,OAArB,CAAV;AACH;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAChC,QAAMtB,GAAG,CAAC,CACNC,IAAI,CAACkB,UAAD,CADE,EAENlB,IAAI,CAACmB,WAAD,CAFE,EAGNnB,IAAI,CAACoB,YAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import { all, fork, take, call, put } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try{\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n        type: 'LOG_IN_SUCCESS',\r\n        data: result.data\r\n    });\r\n  } catch (err) {\r\n      yield put({\r\n          type: \"LOG_IN_FAILURE\",\r\n          data: err.response.data,\r\n      });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try{\r\n      const result = yield call(logOutAPI);\r\n      yield put({\r\n          type: 'LOG_OUT_SUCCESS',\r\n          data: result.data\r\n      });\r\n    } catch (err) {\r\n        yield put({\r\n            type: \"LOG_OUT_FAILURE\",\r\n            data: err.response.data,\r\n        });\r\n    }\r\n  }\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try{\r\n      const result = yield call(addPostAPI, action.data);\r\n      yield put({\r\n          type: 'ADD_POST_SUCCESS',\r\n          data: result.data\r\n      });\r\n    } catch (err) {\r\n        yield put({\r\n            type: \"ADD_POST_FAILURE\",\r\n            data: err.response.data,\r\n        });\r\n    }\r\n  }\r\n\r\n\r\nfunction* watchLogin() {\r\n    yield take('LOG_IN_REQUSET', logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield take('LOG_OUT_REQUSET', logOut);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield take('ADD_POST_REQUSET', addPost);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchAddPost),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}