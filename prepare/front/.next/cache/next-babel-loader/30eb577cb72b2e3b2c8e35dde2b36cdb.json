{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore(context) {\n  console.log(context);\n  var middlewares = [thunkMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["D:/reactNative/react-nodebird/prepare/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","thunkMiddleware","reducer","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","context","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA4B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACzEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACD,KAHoD;AAAA,GAA5B;AAAA,CAAzB;;AAKA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAClCH,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,MAAMC,WAAW,GAAG,CAACX,eAAD,EAAkBE,gBAAlB,CAApB;AACA,MAAMU,QAAQ,GAAG,QACbf,OAAO,CAACF,eAAe,MAAf,SAAmBgB,WAAnB,CAAD,CADM,GAEbZ,mBAAmB,CACnBJ,eAAe,MAAf,SAAmBgB,WAAnB,CADmB,CAFvB;AAKA,MAAME,KAAK,GAAGjB,WAAW,CAACK,OAAD,EAAUW,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CAVD;;AAYA,IAAMC,OAAO,GAAGhB,aAAa,CAACW,cAAD,EAAiB;AAAEM,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n  console.log(action);\r\n  return next(action);\r\n}\r\n\r\nconst configureStore = (context) => {\r\n  console.log(context);\r\n  const middlewares = [thunkMiddleware, loggerMiddleware];\r\n  const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(\r\n      applyMiddleware(...middlewares),\r\n    );\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development' });\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}