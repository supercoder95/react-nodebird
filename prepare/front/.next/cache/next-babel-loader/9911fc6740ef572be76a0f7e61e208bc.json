{"ast":null,"code":"import { all, fork, delay, put, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000); //   const result = yield call(addPostAPI, action.data);\n\n    yield put({\n      type: 'ADD_POST_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield throttle('ADD_POST_REQUSET', addPost, 2000);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["D:/reactNative/react-nodebird/prepare/front/sagas/post.js"],"names":["all","fork","delay","put","throttle","axios","addPostAPI","data","post","addPost","action","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,QAAhC,QAAgD,oBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAG;AACC,UAAMR,KAAK,CAAC,IAAD,CAAX,CADD,CAEH;;AACE,UAAMC,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE;AADA,KAAD,CAAT;AAGD,GAND,CAME,OAAOC,GAAP,EAAY;AACV,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,kBADA;AAENJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFb,KAAD,CAAT;AAIH;AACF;;AAGH,UAAUO,YAAV,GAAyB;AACrB,QAAMV,QAAQ,CAAC,kBAAD,EAAqBK,OAArB,EAA8B,IAA9B,CAAd;AACH;;AAGD,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CACNC,IAAI,CAACa,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, delay, put, throttle } from 'redux-saga/effects'\r\nimport axios from 'axios';\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try{\r\n        yield delay(1000);\r\n    //   const result = yield call(addPostAPI, action.data);\r\n      yield put({\r\n          type: 'ADD_POST_SUCCESS',\r\n      });\r\n    } catch (err) {\r\n        yield put({\r\n            type: \"ADD_POST_FAILURE\",\r\n            data: err.response.data,\r\n        });\r\n    }\r\n  }\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield throttle('ADD_POST_REQUSET', addPost, 2000);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}